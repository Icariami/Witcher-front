{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repos\\\\Witcher stuff\\\\witcher-app\\\\src\\\\components\\\\GetNodes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetNodes = () => {\n  _s();\n  var _nodes$;\n  const [label, setLabel] = useState(\"\");\n  const [nodes, setNodes] = useState([]);\n  const [response, setResponse] = useState(\"\");\n\n  // List of available labels\n  const availableLabels = [\"Character\", \"Ability\", \"Monster\", \"MonsterType\", \"Group\", \"Sign\"];\n  const handleFetchNodes = async () => {\n    try {\n      const res = await axios.get(`http://127.0.0.1:8000/get_nodes/${label}`);\n      const fetchedNodes = res.data.nodes || []; // Default to an empty array if no nodes\n      setNodes(fetchedNodes);\n      setResponse(\"\"); // Clear error\n    } catch (error) {\n      console.error(\"Error fetching nodes:\", error);\n      setResponse(\"Failed to fetch nodes\");\n      setNodes([]); // Clear nodes if there’s an error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Get Nodes by Label\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Node Label:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: label,\n        onChange: e => setLabel(e.target.value),\n        style: {\n          margin: \"10px\",\n          padding: \"5px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Choose Label\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), availableLabels.map(lbl => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: lbl,\n          children: lbl\n        }, lbl, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFetchNodes,\n        disabled: !label,\n        style: {\n          margin: \"10px\",\n          padding: \"10px 20px\"\n        },\n        children: \"Fetch Nodes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        color: \"red\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), nodes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Results for Label: \", label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          margin: \"0 auto\",\n          borderCollapse: \"collapse\",\n          width: \"80%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(((_nodes$ = nodes[0]) === null || _nodes$ === void 0 ? void 0 : _nodes$.properties) || {}).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: \"1px solid black\",\n                padding: \"10px\",\n                backgroundColor: \"#f0f0f0\"\n              },\n              children: key\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: nodes.map((node, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.values(node.properties || {}).map((value, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: \"1px solid black\",\n                padding: \"10px\"\n              },\n              children: value\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 41\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this) : label && !response && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No nodes found for label: \", label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 39\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(GetNodes, \"2TM9qRt/mLzz4+Rx4btmOoQ+XDk=\");\n_c = GetNodes;\nexport default GetNodes;\nvar _c;\n$RefreshReg$(_c, \"GetNodes\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GetNodes","_s","_nodes$","label","setLabel","nodes","setNodes","response","setResponse","availableLabels","handleFetchNodes","res","get","fetchedNodes","data","error","console","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","margin","padding","disabled","map","lbl","onClick","color","length","borderCollapse","width","Object","keys","properties","key","border","backgroundColor","node","index","values","idx","_c","$RefreshReg$"],"sources":["C:/Repos/Witcher stuff/witcher-app/src/components/GetNodes.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst GetNodes = () => {\r\n    const [label, setLabel] = useState(\"\");\r\n    const [nodes, setNodes] = useState([]);\r\n    const [response, setResponse] = useState(\"\");\r\n\r\n    // List of available labels\r\n    const availableLabels = [\"Character\", \"Ability\", \"Monster\", \"MonsterType\", \"Group\", \"Sign\"];\r\n\r\n    const handleFetchNodes = async () => {\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/get_nodes/${label}`);\r\n            const fetchedNodes = res.data.nodes || []; // Default to an empty array if no nodes\r\n            setNodes(fetchedNodes);\r\n            setResponse(\"\"); // Clear error\r\n        } catch (error) {\r\n            console.error(\"Error fetching nodes:\", error);\r\n            setResponse(\"Failed to fetch nodes\");\r\n            setNodes([]); // Clear nodes if there’s an error\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n            <h2>Get Nodes by Label</h2>\r\n            <div>\r\n                <label>Node Label:</label>\r\n                <select\r\n                    value={label}\r\n                    onChange={(e) => setLabel(e.target.value)}\r\n                    style={{ margin: \"10px\", padding: \"5px\" }}\r\n                >\r\n                    <option value=\"\" disabled>\r\n                        Choose Label\r\n                    </option>\r\n                    {availableLabels.map((lbl) => (\r\n                        <option key={lbl} value={lbl}>\r\n                            {lbl}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <button\r\n                    onClick={handleFetchNodes}\r\n                    disabled={!label}\r\n                    style={{ margin: \"10px\", padding: \"10px 20px\" }}\r\n                >\r\n                    Fetch Nodes\r\n                </button>\r\n            </div>\r\n\r\n            {response && (\r\n                <div style={{ marginTop: \"20px\", color: \"red\" }}>\r\n                    <h3>{response}</h3>\r\n                </div>\r\n            )}\r\n\r\n            {/* Dynamic Table */}\r\n            {nodes.length > 0 ? (\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <h3>Results for Label: {label}</h3>\r\n                    <table style={{ margin: \"0 auto\", borderCollapse: \"collapse\", width: \"80%\" }}>\r\n                        <thead>\r\n                            <tr>\r\n                                {/* Table Headers */}\r\n                                {Object.keys(nodes[0]?.properties || {}).map((key) => (\r\n                                    <th\r\n                                        key={key}\r\n                                        style={{\r\n                                            border: \"1px solid black\",\r\n                                            padding: \"10px\",\r\n                                            backgroundColor: \"#f0f0f0\",\r\n                                        }}\r\n                                    >\r\n                                        {key}\r\n                                    </th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {nodes.map((node, index) => (\r\n                                <tr key={index}>\r\n                                    {/* Table Data */}\r\n                                    {Object.values(node.properties || {}).map((value, idx) => (\r\n                                        <td\r\n                                            key={idx}\r\n                                            style={{\r\n                                                border: \"1px solid black\",\r\n                                                padding: \"10px\",\r\n                                            }}\r\n                                        >\r\n                                            {value}\r\n                                        </td>\r\n                                    ))}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            ) : (\r\n                label && !response && <p>No nodes found for label: {label}</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GetNodes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}