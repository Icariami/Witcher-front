{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repos\\\\Witcher stuff\\\\witcher-app\\\\src\\\\components\\\\GetNodes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetNodes = () => {\n  _s();\n  const [label, setLabel] = useState(\"\");\n  const [nodes, setNodes] = useState([]);\n  const [response, setResponse] = useState(\"\");\n  const handleFetchNodes = async () => {\n    try {\n      const res = await axios.get(`http://127.0.0.1:8000/get_nodes/${label}`);\n      setNodes(res.data.nodes);\n      setResponse(\"\");\n    } catch (error) {\n      console.error(\"Error fetching nodes:\", error);\n      setResponse(\"Failed to fetch nodes\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Get Nodes by Label\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Node Label (e.g., Character, Monster):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: label,\n        onChange: e => setLabel(e.target.value),\n        style: {\n          margin: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchNodes,\n      children: \"Get Nodes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        color: \"red\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), nodes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Nodes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(nodes, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(GetNodes, \"2TM9qRt/mLzz4+Rx4btmOoQ+XDk=\");\n_c = GetNodes;\nexport default GetNodes;\nvar _c;\n$RefreshReg$(_c, \"GetNodes\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GetNodes","_s","label","setLabel","nodes","setNodes","response","setResponse","handleFetchNodes","res","get","data","error","console","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","margin","onClick","color","length","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Repos/Witcher stuff/witcher-app/src/components/GetNodes.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst GetNodes = () => {\r\n    const [label, setLabel] = useState(\"\");\r\n    const [nodes, setNodes] = useState([]);\r\n    const [response, setResponse] = useState(\"\");\r\n\r\n    const handleFetchNodes = async () => {\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/get_nodes/${label}`);\r\n            setNodes(res.data.nodes);\r\n            setResponse(\"\");\r\n        } catch (error) {\r\n            console.error(\"Error fetching nodes:\", error);\r\n            setResponse(\"Failed to fetch nodes\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n            <h2>Get Nodes by Label</h2>\r\n            <div>\r\n                <label>Node Label (e.g., Character, Monster):</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={label}\r\n                    onChange={(e) => setLabel(e.target.value)}\r\n                    style={{ margin: \"10px\" }}\r\n                />\r\n            </div>\r\n            <button onClick={handleFetchNodes}>Get Nodes</button>\r\n            {response && (\r\n                <div style={{ marginTop: \"20px\", color: \"red\" }}>\r\n                    <h3>{response}</h3>\r\n                </div>\r\n            )}\r\n            {nodes.length > 0 && (\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <h3>Nodes:</h3>\r\n                    <pre>{JSON.stringify(nodes, null, 2)}</pre>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GetNodes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}